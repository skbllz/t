# -*- coding: utf-8 -*-

from i3pystatus import Status
from i3pystatus.weather import weathercom

status = Status()

# time
status.register(
    'clock',
    format='%a %d %b %H:%M',
)

# sound
status.register(
    'pulseaudio',
    on_leftclick='switch_mute',
    on_rightclick='pavucontrol',
    format='{volume}%',
    # multi_colors=True,
    hints={'markup': 'pango'},
)

# # disk
status.register(
    'disk',
    path='/home',
    critical_limit=10,
    interval=600,
    format='H {avail}G',
)

status.register(
    'disk',
    path='/',
    critical_limit=10,
    interval=600,
    format='R {avail}G',
)
# memory
status.register(
    'mem',
    log_level=10,
    format='RAM {percent_used_mem}%',
    color='#FFFFFF',
)

# cpu temperature usage
status.register(
    'temp',
    format='{temp:.0f}°C',
)

status.register(
    'cpu_usage',
    hints={
        'markup': 'pango',
        'separator': False,
        'separator_block_width': 0
    },
    format='CPU {usage:3.0f}% ',
)

# internet wifi
status.register(
    'network',
    # interface='wlp2s0',
    interface='wlp3s0',
    on_leftclick='ip addr show dev {interface} | xmessage -file -',
    hints={'markup': 'pango'},
    format_up='{essid} {quality}% {bytes_recv}Kb/s {bytes_sent}Kb/s',
    format_down='',
    dynamic_color=True,
    start_color='#00FF00',
    end_color='#FF0000',
    color_down='#FF0000',
)

# internet
status.register(
    'network',
    interface='enp2s0',
    on_leftclick='ip addr show dev {interface} | xmessage -file -',
    hints={'markup': 'pango'},
    format_up='{essid} {quality}% {bytes_recv}Kb/s {bytes_sent}Kb/s',
    format_down='',
    dynamic_color=True,
    start_color='#00FF00',
    end_color='#FF0000',
    color_down='#FF0000',
)

# weather
status.register(
    'weather',
    format=
    '{condition} {current_temp}{temp_unit} {wind_speed}{wind_unit} {wind_direction} {pressure}{pressure_unit} {pressure_trend} {visibility}{visibility_unit} {humidity}%',
    colorize=True,
    backend=weathercom.Weathercom(location_code='POXX0008:1:PO', ),
)

# moon
status.register(
    'moon',
    format='{illum:.0f}% {status} {moonicon}',
)

status.register("battery",
    format="{status} | {percentage:.2f}% | {remaining:%E%hh:%Mm}",
    # format="{status}/{consumption:.2f}W {percentage:.2f}% [{percentage_design:.2f}%] {remaining:%E%hh:%Mm}",
    alert=True,
    alert_percentage=5,
    status={
        "DIS": "↓",
        "CHR": "↑",
        "FULL": "=",
    },
)

status.run()
